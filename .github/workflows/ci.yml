name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: 1
  RUSTUP_MAX_RETRIES: 10
  RUSTFLAGS: "-D warnings"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install depdendencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libudev-dev libusb-1.0-0-dev libhidapi-dev mold
      - uses: taiki-e/install-action@v2
        with:
          tool: just@1.40.0,nextest@0.9.99,sqlx-cli
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.84.0
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-kolme"
          cache-workspace-crates: true
          cache-on-failure: true
          workspaces: |
            .
      - uses: step-security/changed-files@v46
        id: contracts
        with:
          files: |
            contracts:
              - contracts/**
              - .ci/**
      - name: Cache contract builds
        uses: actions/cache@v4
        id: contract-cache
        with:
          key: contracts-${{ hashFiles('contracts/cosmos/Cargo.toml') }}-${{ hashFiles('./.ci/build-contracts.sh')}} }
          restore-keys: |
            contracts-${{ hashFiles('contracts/cosmos/Cargo.toml') }}
            contracts
          path: |
            wasm
      - name: Compile
        run: just cargo-compile
      - name: Build contracts
        if: ${{ (steps.contract-cache.outputs.cache-hit == false || steps.contracts.outputs.any_changed == 'true') }}
        run: just build-contracts
      - name: Clippy
        run: just cargo-clippy-check
      - name: Rustfmt
        run: just cargo-fmt-check
      - name: Postgres
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:45921/postgres?sslmode=disable
        run: just postgres
      - name: Run tests
        env:
          PROCESSOR_BLOCK_DB: psql://postgres:postgres@localhost:45921/postgres
        run: just cargo-test
      - name: Start localosmosis
        run: just localosmosis
      - name: Contract tests
        run: just cargo-contract-tests

  solana-contract:
    name: Solana Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install depdendencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libudev-dev libusb-1.0-0-dev libhidapi-dev mold
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v6-solana"
          cache-workspace-crates: true
          # https://github.com/Swatinem/rust-cache/issues/237
          cache-bin: false
          workspaces: |
            .
            solana
      - uses: taiki-e/install-action@v2
        with:
          tool: just@1.40.0
      - name: Cache solana binaries
        uses: actions/cache@v4
        id: solana-cache
        with:
          key: solana-${{ hashFiles('solana/justfile') }}
          restore-keys: |
            solana
          path: |
            ~/.cargo/bin
      - name: Setup dummy criterion
        # https://github.com/anza-xyz/agave/blob/96bef97b8077a97dc994f8a8a95d2dd27cd3eef9/platform-tools-sdk/sbf/scripts/install.sh#L93
        run: mkdir -p ~/.cache/solana/v2.3.3/criterion
      - name: Setup solana
        if: steps.solana-cache.outputs.cache-hit == 'false' || steps.solana-cache.outputs.cache-hit == ''
        working-directory: solana
        run: just download-solana
      - name: Compile
        working-directory: solana
        run: just cargo-compile
      - name: Build
        working-directory: solana
        run: just build
      - name: Test
        working-directory: solana
        run: just test
